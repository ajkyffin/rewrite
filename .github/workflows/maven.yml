name: Java CI with Maven

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [ 17, 19 ]
        jakarta: [ 9, 10 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - run: ./mvnw --batch-mode --update-snapshots install -DskipTests -P EE${{ matrix.jakarta }}

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        java: [ 17, 19 ]
        jakarta: [ 9, 10 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - run: ./mvnw --batch-mode --update-snapshots install -DskipTests -P EE${{ matrix.jakarta }}
      - run: ./mvnw --batch-mode test -P EE${{ matrix.jakarta }}

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        java: [ 17, 19 ]
        container: [ 'WILDFLY_MANAGED', 'WILDFLY_REMOTE', 'PAYARA_MANAGED' ]
        jakarta: [ 9, 10 ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - run: ./mvnw -V --batch-mode --update-snapshots install -DskipTests -P EE${{ matrix.jakarta }}
      - run: ./mvnw -V --batch-mode -P ${{ matrix.container }},EE${{ matrix.jakarta }} verify
